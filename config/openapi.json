{
  "openapi": "3.0.2",
  "info": {
    "title": "Binar Car Rental RESTful API",
    "description": "OpenAPI for Binar Car Rental RESTful API",
    "version": "1.0.0",
    "contact": {
      "name": "Gusde",
      "email": "gusde@slickeel.com",
      "url": "https://www.slickeel.com"
    },
    "license": {
      "name": "APACHE 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": [
    {
      "description": "Binar Car Rental API Server",
      "url": "http://localhost:8080/api/v1"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["users"],
        "security": [
          {
            "userAuth": []
          }
        ],
        "summary": "Register user",
        "description": "Register user with different role, like member, admin, and superadmin",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "required": ["true"],
                    "minLength": 3
                  },
                  "fullname": {
                    "type": "string",
                    "required": ["true"],
                    "minLength": 3
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6,
                    "required": ["true"]
                  },
                  "role": {
                    "type": "string",
                    "required": ["true"],
                    "enum": ["superadmin", "admin", "member"]
                  }
                }
              },
              "examples": {
                "superadmin": {
                  "description": "Register user with username gusde and role as superadmin",
                  "value": {
                    "username": "gusde",
                    "fullname": "Bagus Suprapta",
                    "password": "123456",
                    "role": "superadmin"
                  }
                },
                "admin": {
                  "description": "Register user with username anom and role as admin",
                  "value": {
                    "username": "anom",
                    "fullname": "Anom Suryanang",
                    "password": "123456",
                    "role": "admin"
                  }
                },
                "member": {
                  "description": "Register user with username jhon and role as member",
                  "value": {
                    "username": "jhon",
                    "fullname": "Jhon Doe",
                    "password": "123456",
                    "role": "member"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success register user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "required": ["true"],
                      "minLength": 3
                    },
                    "role": {
                      "type": "string",
                      "required": ["true"],
                      "enum": ["superadmin", "admin", "member"]
                    }
                  }
                },
                "examples": {
                  "superadmin": {
                    "description": "Success register user with username gusde and role as superadmin",
                    "value": {
                      "username": "gusde",
                      "role": "superadmin"
                    }
                  },
                  "admin": {
                    "description": "Success register user with username anom and role as admin if user have been login as superadmin role",
                    "value": {
                      "username": "anom",
                      "role": "admin"
                    }
                  },
                  "member": {
                    "description": "Success register user with username jhon and role as member",
                    "value": {
                      "username": "jhon",
                      "role": "member"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized register user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "without login": {
                    "description": "Unauthorized user when register an user with role as admin",
                    "value": {
                      "message": "login as superadmin needed to this action"
                    }
                  },
                  "login as member": {
                    "description": "Unauthorized user when register an user with role as admin",
                    "value": {
                      "message": "login as superadmin needed to this action"
                    }
                  },
                  "login as admin": {
                    "description": "Unauthorized user when register an user with role as admin",
                    "value": {
                      "message": "login as superadmin needed to this action"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict register user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "username conflict": {
                    "description": "Username conflict because have already use",
                    "value": {
                      "message": "choose another username"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity register user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "username key undefined": {
                    "description": "username key does not initialize",
                    "value": {
                      "message": "username key cannot empty"
                    }
                  },
                  "fullname key undefined": {
                    "description": "fullname key does not initialize",
                    "value": {
                      "message": "fullname key cannot empty"
                    }
                  },
                  "password key undefined": {
                    "description": "password key does not initialize",
                    "value": {
                      "message": "password key cannot empty"
                    }
                  },
                  "role key undefined": {
                    "description": "role key does not initialize",
                    "value": {
                      "message": "role key cannot empty"
                    }
                  },
                  "role have wrong value": {
                    "description": "role value wrong",
                    "value": {
                      "message": "set role to member, admin or superadmin"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["users"],
        "security": [
          {
            "userAuth": []
          }
        ],
        "summary": "Login user",
        "description": "Login user with different role, like member, admin, and superadmin",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "required": ["true"],
                    "minLength": 2
                  },
                  "password": {
                    "type": "string",
                    "required": ["true"],
                    "minLength": 3
                  }
                }
              },
              "examples": {
                "login as gusde": {
                  "description": "Login with username gusde",
                  "value": {
                    "username": "gusde",
                    "password": "123"
                  }
                },
                "login as anom": {
                  "description": "Login with username anom",
                  "value": {
                    "username": "anom",
                    "password": "123"
                  }
                },
                "login as jhon": {
                  "description": "Login with username jhon",
                  "value": {
                    "username": "jhon",
                    "password": "123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success login user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "success login": {
                    "value": {
                      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Imd1c2RlIiwiZnVsbG5hbWUiOiJCYWd1cyBTdXByYXB0YSIsImlhdCI6MTY1MjQ1Mzg4M30.OPmGtLgbz6i4S78ly-u6Rz0URTf3ZrB2gpfjbN-gq2k"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized login user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "message": "username or password wrong"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity login user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "username key undefined": {
                    "description": "username key does not initialize",
                    "value": {
                      "message": "username key cannot empty"
                    }
                  },
                  "password key undefined": {
                    "description": "password key does not initialize",
                    "value": {
                      "message": "password key cannot empty"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["users"],
        "summary": "Current user",
        "description": "Current user",
        "security": [
          {
            "userAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/authUser"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get current user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "fullname": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "success": {
                    "description": "success get current user",
                    "value": {
                      "username": "gusde",
                      "fullname": "Bagus Suprapta",
                      "role": "superadmin"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars/create": {
      "post": {
        "tags": ["cars"],
        "summary": "Get cars",
        "description": "Get cars",
        "security": [
          {
            "userAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/authUser"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "plate": {
                    "type": "string"
                  },
                  "manufacture": {
                    "type": "string"
                  },
                  "model": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "rentPerDay": {
                    "type": "integer"
                  },
                  "capacity": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "transmision": {
                    "type": "string"
                  },
                  "available": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "string"
                  },
                  "year": {
                    "type": "string"
                  },
                  "options": {
                    "type": "string"
                  },
                  "specs": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "B1234BC": {
                  "value": {
                    "plate": "B1234BC",
                    "manufacture": "Ford",
                    "model": "F150",
                    "image": "url",
                    "rentPerDay": 200000,
                    "capacity": 2,
                    "description": "Brake assist. Leather-wrapped shift knob. Glove box lamp. Air conditioning w/in-cabin microfilter.",
                    "transmision": "Automatic",
                    "available": 1,
                    "type": "Sedan",
                    "year": "2018",
                    "options": "Cruise Control, Tinted Glass, Tinted Glas, Tinted Glass",
                    "specs": "Cruise Control, Tinted Glass, Tinted Glas, Tinted Glass"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create car",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "B1234BC": {
                    "value": {
                      "message": "B1234BC created"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars": {
      "get": {
        "tags": ["cars"],
        "summary": "Get cars",
        "description": "Get all cars",
        "responses": {
          "200": {
            "description": "Success get all cars",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "plate": {
                      "type": "string"
                    },
                    "manufacture": {
                      "type": "string"
                    },
                    "model": {
                      "type": "string"
                    },
                    "image": {
                      "type": "string"
                    },
                    "rentPerDay": {
                      "type": "integer"
                    },
                    "capacity": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "transmision": {
                      "type": "string"
                    },
                    "available": {
                      "type": "boolean"
                    },
                    "type": {
                      "type": "string"
                    },
                    "year": {
                      "type": "string"
                    },
                    "options": {
                      "type": "string"
                    },
                    "specs": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "B1234BC": {
                    "value": {
                      "plate": "B1234BC",
                      "manufacture": "Ford",
                      "model": "F150",
                      "image": "url",
                      "rentPerDay": 200000,
                      "capacity": 2,
                      "description": "Brake assist. Leather-wrapped shift knob. Glove box lamp. Air conditioning w/in-cabin microfilter.",
                      "transmision": "Automatic",
                      "available": 1,
                      "type": "Sedan",
                      "year": "2018",
                      "options": "Cruise Control, Tinted Glass, Tinted Glas, Tinted Glass",
                      "specs": "Cruise Control, Tinted Glass, Tinted Glas, Tinted Glass"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars/update/{plate}": {
      "put": {
        "security": [
          {
            "authUser": []
          }
        ],
        "summary": "Update car",
        "tags": ["cars"],
        "parameters": [
          {
            "required": true,
            "name": "plate",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "examples": {
              "B1234BC": {
                "value": "B1234BC"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "manufacture": {
                    "type": "string"
                  },
                  "model": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "rentPerDay": {
                    "type": "integer"
                  },
                  "capacity": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "transmision": {
                    "type": "string"
                  },
                  "available": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "string"
                  },
                  "year": {
                    "type": "string"
                  },
                  "options": {
                    "type": "string"
                  },
                  "specs": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "B1234BC": {
                  "value": {
                    "manufacture": "Ford",
                    "model": "F150",
                    "image": "url",
                    "rentPerDay": 200000,
                    "capacity": 2,
                    "description": "Brake assist. Leather-wrapped shift knob. Glove box lamp. Air conditioning w/in-cabin microfilter.",
                    "transmision": "Automatic",
                    "available": 1,
                    "type": "Sedan",
                    "year": "2018",
                    "options": "Cruise Control, Tinted Glass, Tinted Glas, Tinted Glass",
                    "specs": "Cruise Control, Tinted Glass, Tinted Glas, Tinted Glass"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update car",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "B1234BC": {
                    "value": {
                      "message": "B1234BC updated"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars/delete/{plate}": {
      "delete": {
        "security": [
          {
            "userAuth": []
          }
        ],
        "summary": "Delete car",
        "tags": ["cars"],
        "parameters": [
          {
            "required": true,
            "name": "plate",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "examples": {
              "B1234BC": {
                "value": "B1234BC"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete car",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "B1234BC": {
                    "value": {
                      "message": "B1234BC deleted"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "userAuth": {
        "description": "Auth for user Binar Car Rental",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "parameters": {
      "authUser": {
        "name": "token",
        "in": "header",
        "schema": {
          "type": "string"
        }
      }
    }
  }
}
